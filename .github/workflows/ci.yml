name: CI Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        compiler: [gcc, clang]
        build_type: [Debug, Release]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential clang
        
    - name: Set up compiler
      run: |
        if [ "${{ matrix.compiler }}" = "gcc" ]; then
          echo "CC=gcc" >> $GITHUB_ENV
          echo "CXX=g++" >> $GITHUB_ENV
        else
          echo "CC=clang" >> $GITHUB_ENV
          echo "CXX=clang++" >> $GITHUB_ENV
        fi
        
    - name: Configure CMake
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DCMAKE_C_COMPILER=${{ env.CC }} \
          -DCMAKE_CXX_COMPILER=${{ env.CXX }}
          
    - name: Build
      run: |
        cmake --build build --config ${{ matrix.build_type }} --parallel 2
        
    - name: Run tests
      run: |
        cd build && ctest --output-on-failure

  build_on_windows:
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]

    steps:
      - name: checking out repository
        uses: actions/checkout@v4

      - name: preparing build
        run:  cmake . -B_build 
      - name: building
        run:  cmake --build _build
      - name: checking programs output
        run:  |
          echo "1 -5  6" | _build\solver_application\Debug\solver_app 
          _build\hello_world_application\Debug\hello

      - name: status info
        run: echo ${{ job.status }} is status of job
  
